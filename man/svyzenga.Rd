% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/svyzenga.R
\name{svyzenga}
\alias{svyzenga}
\alias{svyzenga.DBIsvydesign}
\alias{svyzenga.survey.design}
\alias{svyzenga.svyrep.design}
\title{Zenga index}
\usage{
svyzenga(formula, design, ...)

\method{svyzenga}{survey.design}(formula, design, na.rm = FALSE, ...)

\method{svyzenga}{svyrep.design}(formula, design, na.rm = FALSE, ...)

\method{svyzenga}{DBIsvydesign}(formula, design, ...)
}
\arguments{
\item{formula}{a formula specifying the income variable.}

\item{design}{a design object of class \code{survey.design} or class \code{svyrep.design} from the \code{survey} library.}

\item{...}{future expansion}

\item{na.rm}{Should cases with missing values be dropped?}
}
\value{
Object of class "\code{cvystat}", which are vectors with a "\code{var}" attribute giving the variance and a "\code{statistic}" attribute giving the name of the statistic.
}
\description{
Estimate the Zenga index, a measure of inequality
}
\details{
you must run the \code{convey_prep} function on your survey design object immediately after creating it with the \code{svydesign} or \code{svrepdesign} function.
}
\examples{
library(survey)
library(vardpoor)
data(eusilc) ; names( eusilc ) <- tolower( names( eusilc ) )

# linearized design
des_eusilc <- svydesign( ids = ~rb030 , strata = ~db040 ,  weights = ~rb050 , data = eusilc )
des_eusilc <- convey_prep(des_eusilc)

# replicate-weighted design
des_eusilc_rep <- as.svrepdesign( des_eusilc , type = "bootstrap" )

# database-backed design
library(MonetDBLite)
library(DBI)
dbfolder <- tempdir()
conn <- dbConnect( MonetDBLite::MonetDBLite() , dbfolder )
dbWriteTable( conn , 'eusilc' , eusilc )

dbd_eusilc <-
	svydesign(
		ids = ~rb030 ,
		strata = ~db040 , 
		weights = ~rb050 ,
		data="eusilc",
		dbname=dbfolder,
		dbtype="MonetDBLite"
	)

dbd_eusilc <- convey_prep( dbd_eusilc )


# Variable without missing values
svyzenga(~eqincome, des_eusilc, na.rm = FALSE)
svyzenga(~eqincome, dbd_eusilc, na.rm = FALSE)
svyzenga(~eqincome, des_eusilc_rep, na.rm = FALSE)

# Subsetting:
svyzenga(~eqincome, subset( des_eusilc, db040 == "Styria"), na.rm = FALSE)
svyzenga(~eqincome, subset( dbd_eusilc, db040 == "Styria"), na.rm = FALSE)
svyzenga(~eqincome, subset( des_eusilc_rep, db040 == "Styria"), na.rm = FALSE)

# Variable with missing values and subsetting:
svyzenga(~py010n, subset( des_eusilc, db040 == "Styria"), na.rm = FALSE)
svyzenga(~py010n, subset( dbd_eusilc, db040 == "Styria"), na.rm = FALSE)
svyzenga(~py010n, subset( des_eusilc_rep, db040 == "Styria"), na.rm = FALSE)

svyzenga(~py010n, subset( des_eusilc, db040 == "Styria"), na.rm = TRUE)
svyzenga(~py010n, subset( dbd_eusilc, db040 == "Styria"), na.rm = TRUE)
svyzenga(~py010n, subset( des_eusilc_rep, db040 == "Styria"), na.rm = TRUE)

dbRemoveTable( conn , 'eusilc' )

}
\author{
Djalma Pessoa, Anthony Damico and Guilherme Jacob
}
\references{
Matti Langel (2012). Measuring inequality in finite population sampling.
PhD thesis: Université de Neuchâtel,
URL \url{https://doc.rero.ch/record/29204/files/00002252.pdf}.
}
\seealso{
\code{\link{svygini}}
}
\keyword{survey}

