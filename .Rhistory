list_ARPT<-list(var_ARPT<-var_ARPT,se=sqrt(var_ARPT))
# LINEARIZATION OF THE AT-RISK-OF-POVERTY RATE (ARPR)
rate_val<-coef(svymean(~I((eqIncome<=thres_val)*1),des_eusilc))
#bandwith parameter
u2<-(thres_val-inc)/h
vect_f2<-exp(-u2^2/2)/sqrt(2*pi)
f_quant2<-sum(vect_f2*w)/(N*h)
lin_ARPR<-(1/N)*((inc<=thres_val)*1-rate_val)+f_quant2*lin_ARPT
lin_ARPR_tot<-svytotal(~lin_ARPR,des_eusilc)
var_ARPR<-attr(lin_ARPR_tot, "var")
list_ARPR<-list(rate_val=rate_val,se=sqrt(var_ARPR))
list_ARPR
rate_val<-coef(svymean(~I((inc<=thres_val)*1),des))
alpha1<- alpha
alpha<-.20
alpha1<- alpha
alpha2<- 1-alpha
quant_inf <- coef(svyquantile(inc, des_eusilc, alpha1))
quant_inf <- coef(svyquantile(~eqIncome, des_eusilc, alpha1))
quant_inf <-  svyquantile(~eqIncome, des_eusilc, alpha1)
quant_sup <- svyquantile(eqIncome, des_eusilc, alpha2)
quant_sup <- svyquantile(~ eqIncome, des_eusilc, alpha2)
quant_inf
quant_inf<-as.vector(quant_inf)
quant_inf
quant_sup<-as.vector(quant_sup)
quant_sup
den_val <- coef(svytotal(~I((eqIncome>quant_sup)*1),des_eusilc))
num_val <- coef(svytotal(~I((eqIncome<=quant_inf)*1),des_eusilc))
den_val
num_val
share_ratio <-  num_val/den_val
share_ratio
u1<-(quant_inf-inc)/h
vect_f1<-exp(-u1^2/2)/sqrt(2*pi)
f_quant1<-sum(vect_f1*w)/(N*h)
lin_inf=-(1/N)*((inc<=quant_inf)*1-alpha1)/f_quant1
u2<-(quant_sup-inc)/h
vect_f2<-exp(-u2^2/2)/sqrt(2*pi)
f_quant2<-sum(vect_f2*w)/(N*h)
lin_sup=-(1/N)*((inc<=quant_sup)*1-alpha2)/f_quant2
u3=(quant_sup-inc)/h
vect_f3=exp(-(u3^2)/2)/sqrt(2*pi)
f_quant3=(vect_f3*v)/h
lin_num=inc-inc*(inc<=quant_sup)-f_quant3*lin_sup
u3=(quant_sup-inc)/h
vect_f3=exp(-(u3^2)/2)/sqrt(2*pi)
f_quant3=(vect_f3*v)/h
lin_num=inc-inc*(inc<=quant_sup)-f_quant3*lin_sup
u3<-(quant_sup-inc)/h
vect_f3<-exp(-(u3^2)/2)/sqrt(2*pi)
f_quant3<-(vect_f3*v)/h
lin_num<-inc-inc*(inc<=quant_sup)-f_quant3*lin_sup
f_quant3
f_quant3<-(vect_f3*v)/h
f_quant3<-sum(vect_f3*W)/(N*h)
f_quant3<-sum(vect_f3*w)/(N*h)
lin_num<-inc-inc*(inc<=quant_sup)-f_quant3*lin_sup
u4=(quant_inf-inc)/h
vect_f4=exp(-(u4^2)/2)/sqrt(2*pi)
u4=(quant_inf-inc)/h
vect_f4=exp(-(u4^2)/2)/sqrt(2*pi)
f_quant4=(vect_f4*w)/(N*h)
lin_den=inc*(inc<=quant_inf)+f_quant4*lin_inf
lin_share_ratio<-((den_val)*lin_num-(num_val)*lin_den)/(den_val*den_val)
lin_share_ratio
des_eusilc$variables$lin_share_ratio<-lin_share_ratio
lin_share_ratio_tot<-svytotal(~lin_share_ratio,des_eusilc)
var_lin_share_ratio<-attr(lin_share_ratio_tot, "var")
list_ARPT<-list(var_ARPT<-var_ARPT,se=sqrt(var_ARPT))
list(share_ratio=share_ratio, se=sqrt(var_lin_share_ratio ))
var_lin_share_ratio
u4=(quant_inf-inc)/h
vect_f4=exp(-(u4^2)/2)/sqrt(2*pi)
f_quant4=(vect_f4*w)/(N*h)
lin_den=inc-inc*(inc<=quant_inf)+f_quant4*lin_inf
lin_share_ratio<-((den_val)*lin_num-(num_val)*lin_den)/(den_val*den_val)
des_eusilc$variables$lin_share_ratio<-lin_share_ratio
lin_share_ratio_tot<-svytotal(~lin_share_ratio,des_eusilc)
var_lin_share_ratio<-attr(lin_share_ratio_tot, "var")
list(share_ratio=share_ratio, se=sqrt(var_lin_share_ratio ))
u1<-(quant_val-inc)/h
vect_f1<-exp(-u1^2/2)/sqrt(2*pi)
f_quant1<-sum(vect_f1*w)/(N*h)
f_quant<-function(x,inc=inc,h=h){
u<-(x-inc)/h
vect_f<-exp(-u^2/2)/sqrt(2*pi)
f_quant<-sum(vect_f*w)/(N*h)
f_quant
}
f_quant(thres_val)
f_quant<-function(x,inc=inc,h=h){
u<-(x-inc)/h
vect_f<-exp(-u^2/2)/sqrt(2*pi)
f_quant_val<-sum(vect_f*w)/(N*h)
f_quant_val
}
f_quant1<-f_quant(thres_val)
h
str(inc)
f_quant<-function(x,inc=inc,h=h,w=w){
u<-(x-inc)/h
vect_f<-exp(-u^2/2)/sqrt(2*pi)
f_quant_val<-sum(vect_f*w)/(N*h)
f_quant_val
}
f_quant(thres_val)
f_quant
f_quant<-function(x,inc=inc,h=h,w=w){
N<-sum(w)
u<-(x-inc)/h
vect_f<-exp(-u^2/2)/sqrt(2*pi)
f_quant_val<-sum(vect_f*w)/(N*h)
f_quant_val
}
f_quant(thres_val)
thres_val
f_quant1
quant_fun<-function(x,inc=inc,h=h,w=w){
N<-sum(w)
u<-(x-inc)/h
vect_f<-exp(-u^2/2)/sqrt(2*pi)
sum(vect_f*w)/(N*h)
}
quant_fun(thres_val)
ls()
rm(f_quant)
quantfun<-function(x,inc=inc,h=h,w=w){
N<-sum(w)
u<-(x-inc)/h
vectf<-exp(-u^2/2)/sqrt(2*pi)
sum(vectf*w)/(N*h)
}
quantfun(thres_val)
merda<-function(x)x
merda(2)
thres_val<-svyquantile(~eqIncome,des_eusilc,order)
thres_val<-as.vector(thres_val)
var_ARPT <- percent* thres_val
inc<-eusilc$eqIncome
#bandwith parameter
w<-weights(des_eusilc)
N<-sum(w)
sd_inc_w<-sqrt(coef(svyvar(~eqIncome,des_eusilc)))
h<-sd_inc_w/(N^(-1/5))
## expression with quant_val
u1<-(thres_val-inc)/h
vect_f1<-exp(-u^2/2)/sqrt(2*pi)
f_quant1<-sum(vect_f*w)/(N*h)
lin_ARPT <- -(percent * (1/N)*((inc<=thres_val)*1-order))/f_quant1
# estimate variance
des_eusilc$variables$lin_ARPT<-lin_ARPT
lin_ARPT_tot<-svytotal(~lin_ARPT,des_eusilc)
var_ARPT<-attr(lin_ARPT_tot, "var")
list_ARPT<-list(var_ARPT<-var_ARPT,se=sqrt(var_ARPT))
# LINEARIZATION OF THE AT-RISK-OF-POVERTY RATE (ARPR)
rate_val<-coef(svymean(~I((eqIncome<=thres_val)*1),des_eusilc))
#bandwith parameter
# expression with tresh_ val
u2<-(thres_val-inc)/h
vect_f2<-exp(-u2^2/2)/sqrt(2*pi)
f_quant2<-sum(vect_f2*w)/(N*h)
lin_ARPR<-(1/N)*((inc<=thres_val)*1-rate_val)+f_quant2*lin_ARPT
lin_ARPR_tot<-svytotal(~lin_ARPR,des_eusilc)
var_ARPR<-attr(lin_ARPR_tot, "var")
list_ARPR<-list(rate_val=rate_val,se=sqrt(var_ARPR))
# LINEARIZATION OF THE RELATIVE MEDIAN AT-RISK-OF-POVERTY GAP (RMRPG)
rate_val<-coef(svymean(~I((inc<=thres_val)*1),des_eusilc))
median_poor<-coef(svyquantile(~I(I((inc<=thres_val)*1)),des_eusilc,.5))
var_RMRPG<-thres_val-median_poor
# linearization
# expression with quant_val
u1<-(quant_val-inc)/h
vect_f1<-exp(-u1^2/2)/sqrt(2*pi)
f_quant1<-sum(vect_f1*w)/(N*h)
# expression with tres_val
u2<-(thres_val-inc)/h
vect_f2<-exp(-u2^2/2)/sqrt(2*pi)
f_quant2<-sum(vect_f2*w)/(N*h)
# expression with median poor
u3<-(median_poor-inc)/h
vect_f3<-exp(-u3^2/2)/sqrt(2*pi)
f_quant3<-sum(vect_f3*w)/(N*h)
lin_thres<- -(percent * (1/N)*(inc<=quant_val-order))/f_quant1
lin_rate<- (1/N)*((inc<=thres_val)-rate_val)+f_quant2*lin_thres
lin_median_poor<- (0.5*lin_rate-(1/N)*((inc<= median_poor)-0.5*rate_val))/f_quant3
lin_RMRPG<-(median_poor*lin_thres/(thres_val*thres_val)-lin_median_poor/thres_val)
list(var_RMRPG=var_RMRPG,lin_RMRPG=lin_RMRPG)
# LINEARIZATION OF THE INCOME QUINTILE SHARE RATIO S80/S20 (SRAT_S80_S20)
alpha<-.20
alpha1<- alpha
alpha2<- 1-alpha
quant_inf <-  svyquantile(~eqIncome, des_eusilc, alpha1)
quant_inf<-as.vector(quant_inf)
quant_sup <- svyquantile(~ eqIncome, des_eusilc, alpha2)
quant_sup<-as.vector(quant_sup)
den_val <- coef(svytotal(~I((eqIncome>quant_sup)*1),des_eusilc))
num_val <- coef(svytotal(~I((eqIncome<=quant_inf)*1),des_eusilc))
share_ratio <-  num_val/den_val
# linearization
# Linearization of the bottom quantile
u1<-(quant_inf-inc)/h
vect_f1<-exp(-u1^2/2)/sqrt(2*pi)
f_quant1<-sum(vect_f1*w)/(N*h)
lin_inf=-(1/N)*((inc<=quant_inf)*1-alpha1)/f_quant1
# Linearization of the top quantile
u2<-(quant_sup-inc)/h
vect_f2<-exp(-u2^2/2)/sqrt(2*pi)
f_quant2<-sum(vect_f2*w)/(N*h)
lin_sup=-(1/N)*((inc<=quant_sup)*1-alpha2)/f_quant2
# Linearization of the total income for the top quintile
u3<-(quant_sup-inc)/h
vect_f3<-exp(-(u3^2)/2)/sqrt(2*pi)
f_quant3<-sum(vect_f3*w)/(N*h)
lin_num<-inc-inc*(inc<=quant_sup)-f_quant3*lin_sup
# Linearization of the total income for the bottom quintile
u4=(quant_inf-inc)/h
vect_f4=exp(-(u4^2)/2)/sqrt(2*pi)
f_quant4=(vect_f4*w)/(N*h)
lin_den=inc-inc*(inc<=quant_inf)+f_quant4*lin_inf
# LINEARIZED VARIABLE OF THE IQ SHARE RATIO
lin_share_ratio<-((den_val)*lin_num-(num_val)*lin_den)/(den_val*den_val)
# estimate variance
des_eusilc$variables$lin_share_ratio<-lin_share_ratio
lin_share_ratio_tot<-svytotal(~lin_share_ratio,des_eusilc)
var_lin_share_ratio<-attr(lin_share_ratio_tot, "var")
list(share_ratio=share_ratio, se=sqrt(var_lin_share_ratio ))
median_poor
median_poor<-coef(svyquantile(~I(I((inc<=thres_val)*1)),des_eusilc,.5))
svyquantile(~eqIncome,subset(des_eusilc,eqIncome<=thres_val),.5)
var_RMRPG<-thres_val-median_poor
median_poor<-svyquantile(~eqIncome,subset(des_eusilc,eqIncome<=thres_val),.5)
var_RMRPG<-thres_val-median_poor
median_poor<-as.vector(median_poor)
median_poor
var_RMRPG<-thres_val-median_poor
# expression with quant_val
u1<-(quant_val-inc)/h
vect_f1<-exp(-u1^2/2)/sqrt(2*pi)
f_quant1<-sum(vect_f1*w)/(N*h)
# expression with tres_val
u2<-(thres_val-inc)/h
vect_f2<-exp(-u2^2/2)/sqrt(2*pi)
f_quant2<-sum(vect_f2*w)/(N*h)
# expression with median poor
u3<-(median_poor-inc)/h
vect_f3<-exp(-u3^2/2)/sqrt(2*pi)
f_quant3<-sum(vect_f3*w)/(N*h)
lin_thres<- -(percent * (1/N)*(inc<=quant_val-order))/f_quant1
lin_rate<- (1/N)*((inc<=thres_val)-rate_val)+f_quant2*lin_thres
lin_median_poor<- (0.5*lin_rate-(1/N)*((inc<= median_poor)-0.5*rate_val))/f_quant3
lin_RMRPG<-(median_poor*lin_thres/(thres_val*thres_val)-lin_median_poor/thres_val)
list(var_RMRPG=var_RMRPG,lin_RMRPG=lin_RMRPG)
lin_share_ratio<-((den_val)*lin_num-(num_val)*lin_den)/(den_val*den_val)
des_eusilc$variables$lin_share_ratio<-lin_share_ratio
lin_share_ratio_tot<-svytotal(~lin_share_ratio,des_eusilc)
var_lin_share_ratio<-attr(lin_share_ratio_tot, "var")
var_lin_share_ratio
list(share_ratio=share_ratio, se=sqrt(var_lin_share_ratio ))
alpha<-.20
alpha1<- alpha
alpha2<- 1-alpha
quant_inf <-  svyquantile(~eqIncome, des_eusilc, alpha1)
quant_inf<-as.vector(quant_inf)
quant_sup <- svyquantile(~ eqIncome, des_eusilc, alpha2)
quant_sup<-as.vector(quant_sup)
den_val <- coef(svytotal(~I((eqIncome>quant_sup)*1),des_eusilc))
num_val <- coef(svytotal(~I((eqIncome<=quant_inf)*1),des_eusilc))
share_ratio <-  num_val/den_val
# linearization
# Linearization of the bottom quantile
u1<-(quant_inf-inc)/h
vect_f1<-exp(-u1^2/2)/sqrt(2*pi)
f_quant1<-sum(vect_f1*w)/(N*h)
lin_inf=-(1/N)*((inc<=quant_inf)*1-alpha1)/f_quant1
# Linearization of the top quantile
u2<-(quant_sup-inc)/h
vect_f2<-exp(-u2^2/2)/sqrt(2*pi)
f_quant2<-sum(vect_f2*w)/(N*h)
lin_sup=-(1/N)*((inc<=quant_sup)*1-alpha2)/f_quant2
# Linearization of the total income for the top quintile
u3<-(quant_sup-inc)/h
vect_f3<-exp(-(u3^2)/2)/sqrt(2*pi)
f_quant3<-sum(vect_f3*w)/(N*h)
lin_num<-inc-inc*(inc<=quant_sup)*1-f_quant3*lin_sup
# Linearization of the total income for the bottom quintile
u4<-(quant_inf-inc)/h
vect_f4<-exp(-(u4^2)/2)/sqrt(2*pi)
f_quant4<-(vect_f4*w)/(N*h)
lin_den<-inc*(inc<=quant_inf)*1+f_quant4*lin_inf
# LINEARIZED VARIABLE OF THE IQ SHARE RATIO
lin_share_ratio<-(den_val*lin_num-num_val*lin_den)/(den_val*den_val)
# estimate variance
des_eusilc$variables$lin_share_ratio<-lin_share_ratio
lin_share_ratio_tot<-svytotal(~lin_share_ratio,des_eusilc)
var_lin_share_ratio<-attr(lin_share_ratio_tot, "var")
list(share_ratio=share_ratio, se=sqrt(var_lin_share_ratio ))
quantfun<-function(x,inc=inc,h=h,w=w){
N<-sum(w)
u<-(x-inc)/h
vectf<-exp(-u^2/2)/sqrt(2*pi)
sum(vectf*w)/(N*h)
}
str(quantfun(quant_sup))
library(debug)
mtrace(quantfun)
quantfun(quantil_val)
quantil_val
quantil_val<-svyquantile(~eqIncome,des_eusilc,order)
quantil_val<-as.vector(thres_val)
thres_val <- percent* quantil_val
inc<-eusilc$eqIncome
#bandwith parameter
w<-weights(des_eusilc)
N<-sum(w)
sd_inc_w<-sqrt(coef(svyvar(~eqIncome,des_eusilc)))
h<-sd_inc_w/(N^(-1/5))
## expression with quant_val
u1<-(quantil_val-inc)/h
vect_f1<-exp(-u^2/2)/sqrt(2*pi)
f_quant1<-sum(vect_f*w)/(N*h)
lin_ARPT <- -(percent * (1/N)*((inc<=quantil_val)*1-order))/f_quant1
# estimate variance
des_eusilc$variables$lin_ARPT<-lin_ARPT
lin_ARPT_tot<-svytotal(~lin_ARPT,des_eusilc)
var_ARPT<-attr(lin_ARPT_tot, "var")
list_ARPT<-list(var_ARPT<-var_ARPT,se=sqrt(var_ARPT))
list_ARPT
N
quantfun(quantil_val)
mtrace.off()
quantfun(quantil_val)
quantfun(quantil_val,inc=inc,h=h,w=w)
quantil_val<-svyquantile(~eqIncome,des_eusilc,order)
quantil_val<-as.vector(thres_val)
thres_val <- percent* quantil_val
inc<-eusilc$eqIncome
#bandwith parameter
w<-weights(des_eusilc)
N<-sum(w)
sd_inc_w<-sqrt(coef(svyvar(~eqIncome,des_eusilc)))
h<-sd_inc_w/(N^(-1/5))
## expression with quant_val
f_quant1<-quantfun(quantil_val,inc=inc,h=h,w=w)
lin_ARPT <- -(percent * (1/N)*((inc<=quantil_val)*1-order))/f_quant1
# estimate variance
des_eusilc$variables$lin_ARPT<-lin_ARPT
lin_ARPT_tot<-svytotal(~lin_ARPT,des_eusilc)
var_ARPT<-attr(lin_ARPT_tot, "var")
list_ARPT<-list(var_ARPT<-var_ARPT,se=sqrt(var_ARPT))
list_ARPT
(1120.127/1254684)*100
rate_val<-coef(svymean(~I((eqIncome<=thres_val)*1),des_eusilc))
median_poor<-svyquantile(~eqIncome,subset(des_eusilc,eqIncome<=thres_val),.5)
median_poor<-as.vector(median_poor)
#bandwith parameter
# expression with tresh_ val
f_quant2<-quantfun(thres_val,inc=inc,h=h,w=w)
# expression with median_poor
f_quant3<-quantfun(median_poor,inc=inc,h=h,w=w)
lin_thres<--percent*(1/N)*((inc<=quant_val)*1-order/100)/f_quant1;
lin_rate <-(1/N)*((inc<=thres_val)*1-rate_val)+f_quant2*lin_thres;
lin_median_poor<-(0.5*lin_rate-(1/N)*((inc<=median_poor)*1-0.5*rate_val))/f_quant3;
lin_ARPR <- median_poor*lin_thres/(thres_val*thres_val)-lin_median/thres_val
# compute variance
lin_ARPR_tot<-svytotal(~lin_ARPR,des_eusilc)
var_ARPR<-attr(lin_ARPR_tot, "var")
list_ARPR<-list(rate_val=rate_val,se=sqrt(var_ARPR))
rate_val<-coef(svymean(~I((eqIncome<=thres_val)*1),des_eusilc))
median_poor<-svyquantile(~eqIncome,subset(des_eusilc,eqIncome<=thres_val),.5)
median_poor<-as.vector(median_poor)
#bandwith parameter
# expression with tresh_ val
f_quant2<-quantfun(thres_val,inc=inc,h=h,w=w)
# expression with median_poor
f_quant3<-quantfun(median_poor,inc=inc,h=h,w=w)
lin_thres<--percent*(1/N)*((inc<=quant_val)*1-order/100)/f_quant1;
lin_rate <-(1/N)*((inc<=thres_val)*1-rate_val)+f_quant2*lin_thres;
lin_median_poor<-(0.5*lin_rate-(1/N)*((inc<=median_poor)*1-0.5*rate_val))/f_quant3;
lin_ARPR <- median_poor*lin_thres/(thres_val*thres_val)-lin_median_poor/thres_val
# compute variance
lin_ARPR_tot<-svytotal(~lin_ARPR,des_eusilc)
var_ARPR<-attr(lin_ARPR_tot, "var")
list_ARPR<-list(rate_val=rate_val,se=sqrt(var_ARPR))
list_ARPR
alpha<-.20
alpha1<- alpha
alpha2<- 1-alpha
quant_inf <-  svyquantile(~eqIncome, des_eusilc, alpha1)
quant_inf<-as.vector(quant_inf)
quant_sup <- svyquantile(~ eqIncome, des_eusilc, alpha2)
quant_sup<-as.vector(quant_sup)
den_val <- coef(svytotal(~I((eqIncome>quant_sup)*1),des_eusilc))
num_val <- coef(svytotal(~I((eqIncome<=quant_inf)*1),des_eusilc))
share_ratio <-  num_val/den_val
# linearization
# Linearization of the bottom quantile
f_quant1<-quantfun(quant_inf,inc=inc,h=h,w=w)
lin_inf=-(1/N)*((inc<=quant_inf)*1-alpha1)/f_quant1
# Linearization of the top quantile
f_quant2<-quantfun(quant_sup,inc=inc,h=h,w=w)
lin_sup=-(1/N)*((inc<=quant_sup)*1-alpha2)/f_quant2
# Linearization of the total income for the top quintile
f_quant3<-quantfun(quant_sup,inc=inc,h=h,w=w)
lin_num<-inc-inc*(inc<=quant_sup)*1-f_quant3*lin_sup
# Linearization of the total income for the bottom quintile
f_quant4<-quantfun(quant_inf,inc=inc,h=h,w=w)
lin_den<-inc*(inc<=quant_inf)*1+f_quant4*lin_inf
# LINEARIZED VARIABLE OF THE IQ SHARE RATIO
lin_share_ratio<-(den_val*lin_num-num_val*lin_den)/(den_val*den_val)
# estimate variance
des_eusilc$variables$lin_share_ratio<-lin_share_ratio
lin_share_ratio_tot<-svytotal(~lin_share_ratio,des_eusilc)
var_lin_share_ratio<-attr(lin_share_ratio_tot, "var")
list(share_ratio=share_ratio, se=sqrt(var_lin_share_ratio ))
lin_gini<-(2*(T-G+inc*w+N*(inc*F))-inc-(Gini+1)*(T+N*inc))/(N*T)
G<-cumsum(inc*w)
G<-cumsum(inc*w)
lin_gini<-(2*(T-G+inc*w+N*(inc*F))-inc-(Gini+1)*(T+N*inc))/(N*T)
inc<-inc[order(inc)]
w<-w[order(inc)]
# population size
N = sum(w)
# sample size
n<-length(inc)
# total income
T<-sum(inc*w)
# cumulative weight
r<-cumsum(wght)
Num<-sum((2*r-1)*inc*w)
Den<-N*T
# Gini coeficient
Gini<-Num/Den-1
# cumulative distribution function
F<-cumsum(w/N)
# partial weighted function
G<-cumsum(inc*w)
# Gini coefficient linerized variable
lin_gini<-(2*(T-G+inc*w+N*(inc*F))-inc-(Gini+1)*(T+N*inc))/(N*T)
inc<-inc[order(inc)]
w<-w[order(inc)]
# population size
N = sum(w)
# sample size
n<-length(inc)
# total income
T<-sum(inc*w)
# cumulative weight
r<-cumsum(w)
Num<-sum((2*r-1)*inc*w)
Den<-N*T
# Gini coeficient
Gini<-Num/Den-1
# cumulative distribution function
F<-cumsum(w/N)
# partial weighted function
G<-cumsum(inc*w)
# Gini coefficient linerized variable
lin_gini<-(2*(T-G+inc*w+N*(inc*F))-inc-(Gini+1)*(T+N*inc))/(N*T)
des_eusilc$variables$lin_gini<-lin_gini
lin_gini_tot<-svytotal(~lin_gini,des_eusilc)
var_gini<-attr(lin_gini_tot, "var")
des_eusilc$variables$lin_gini<-lin_gini
lin_gini_tot<-svytotal(~lin_gini,des_eusilc)
gini_var<-attr(lin_gini_tot, "var")
list_gini<-list(gini_coef=Gini,gini_var=gini_var)
list_gini
sd_inc_w
getwd()
setwd("~/")
getwd()
setwd("C:\Users\owner\Documents\GitHub\convey\all_funs.R")
setwd("C:/users/owner\Documents\GitHub\convey\all_funs.R")
setwd("C:/users/owner/Documents/GitHub/convey\all_funs.R")
setwd("C:/users/owner/Documents/GitHub/convey")
getwd()
library(vardpoor)
data(eusilc)
library(survey)
des_eusilc <- svydesign(ids=~1, weights=~rb050, data=eusilc)
percent<-.6
order<-.5
source('~/GitHub/convey/all_funs.R', echo=TRUE)
source('~/GitHub/convey/all_funs.R', echo=TRUE)
source('~/GitHub/convey/all_funs.R', echo=TRUE)
source('~/GitHub/convey/all_funs.R', echo=TRUE)
source('~/GitHub/convey/all_funs.R', echo=TRUE)
source('~/GitHub/convey/all_funs.R', echo=TRUE)
svyvar()
svyvar
100^(-1/5)
exp(-.2*log(100))
coef(svyvar(~eqIncome,des_eusilc))
(sum(w*inc*inc)-sum(w*inc)*sum(w*inc))/sum(w)
(sum(w*inc*inc)-sum(w*inc)*sum(w*inc)/sum(w))/sum(w)
N<-sum(w)
(sum(w*inc_var*inc_var)-sum(w*inc_var)*sum(w*inc_var)/N)/N
(sum(w*inc*inc)-sum(w*inc)*sum(w*inc)/N)/N
sqrt((sum(w*inc_var*inc_var)-sum(w*inc_var)*sum(w*inc_var)/N)/N)
sqrt(sum(w*inc*inc)-sum(w*inc)*sum(w*inc)/N)/N
source('~/GitHub/convey/all_funs.R', echo=TRUE)
ARPT
source('~/GitHub/convey/all_funs.R', echo=TRUE)
S80
S20
coef(svytotal(~eqIncome,subset(des_eusilc,eqIncome>quant_sup)))
coef(svytotal(~eqIncome,subset(des_eusilc,eqIncome<=quant_inf)))
S80 <- coef(svytotal(~eqIncome,subset(des_eusilc,eqIncome>quant_sup)))
S20 <- coef(svytotal(~eqIncome,subset(des_eusilc,eqIncome<=quant_inf)))
share_ratio <- S80/S20
share_ratio
source('~/GitHub/convey/all_funs.R', echo=TRUE)
